correlation_matrix <- cor(dataset[, c("demo", "unions", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")])
eigenvalues <- eigen(correlation_matrix)$values
print(eigenvalues)
# Check for multicollinearity using the VIF function
vif_values <- car::vif(lm(Gini_Index ~ demo + unions + CollectiveBargain_Coverage + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset))
independent_vars <- c("demo", "unions", "CollectiveBargain_Coverage", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")
vif_df <- data.frame(VIF = vif_values)
vif_df
library(xtable)
independent_vars <- c("Democratic Governance", "Trade Unions", "Collective Bargain Coverage", "Inflation", "Wage Growth", "Government Debt (%)", "Log of Labor participation", "Women Unemployment Rate", "Net Export", "Net FDI", "Tax Contribution")
# Create dataframe with eigenvalues and VIF values
eigen_vif_df <- data.frame(variables = independent_vars, Eigenvalue = eigenvalues, VIF = vif_values)
# Check for multicollinearity using the eigenvalue test
correlation_matrix <- cor(dataset[, c("demo", "unions", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")])
eigenvalues <- eigen(correlation_matrix)$values
print(eigenvalues)
# Check for multicollinearity using the VIF function
vif_values <- car::vif(lm(Gini_Index ~ demo + unions + CollectiveBargain_Coverage + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset))
independent_vars <- c("demo", "unions", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")
vif_df <- data.frame(VIF = vif_values)
vif_df
library(xtable)
# Check for multicollinearity using the eigenvalue test
correlation_matrix <- cor(dataset[, c("demo", "unions", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")])
eigenvalues <- eigen(correlation_matrix)$values
print(eigenvalues)
# Check for multicollinearity using the VIF function
vif_values <- car::vif(lm(Gini_Index ~ demo + unions + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset))
independent_vars <- c("demo", "unions", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")
vif_df <- data.frame(VIF = vif_values)
vif_df
library(xtable)
independent_vars <- c("Democratic Governance", "Trade Unions", "Inflation", "Wage Growth", "Government Debt (%)", "Log of Labor participation", "Women Unemployment Rate", "Net Export", "Net FDI", "Tax Contribution")
# Create dataframe with eigenvalues and VIF values
eigen_vif_df <- data.frame(variables = independent_vars, Eigenvalue = eigenvalues, VIF = vif_values)
# Print the dataframe
print(eigen_vif_df)
# Define the file path
file_path <- "/Users/jacopobinati/Desktop/thesis/results/VIF_Eigenvalue.tex"
# Write the dataframe to a text file
write.table(eigen_vif_df, file = file_path, sep = "\t", quote = FALSE, row.names = FALSE)
variables <- dataset[, c("Gini_Index", "demo", "unions", "Inflation", "WageGrowth",
"Gov_debt", "lnminwage", "lnGDP",
"WomenUnemployment_rate",
"Female_Workers","Parttime_employment", "net_export", "net_FDI")]
# Calculating the correlation coefficients
correlation_matrix <- cor(variables)
# Plotting the heatmap
heatmap(correlation_matrix,
col = colorRampPalette(c("blue", "white", "red"))(100),
scale = "none",
main = "Correlation Heatmap")
library(stargazer)
library(plm)
library(AER)
library(readr)
df <- df %>%
mutate(
Country = as.factor(Country),
Year = as.factor(Year)
)
pdata <- pdata.frame(df, index = c("Country", "Year"))
model_formulas <- c(
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else if (type == "FD") {
return(plm(formula, data = dataset, model = "fd"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", model_formulas)
fe_models <- create_models(pdata, "FE", model_formulas)
fd_models <- create_models(pdata, "FD", model_formulas)
# Summarize the models
stargazer(ols_models[c(4, 5, 6)], type = "text", title = "OLS Regression Models")
stargazer(fd_models[c(4, 5, 6)], type = "text", title = "First Differences Regression Models")
stargazer(fe_models[c(4, 5, 6)], type = "text", title = "Fixed Effects Regression Models")
FE_summary <- summary(fd_models[c(4, 5, 6)])
FE_summary <- xtable(FE_summary)
file_path_FE <- "/Users/jacopobinati/Desktop/thesis/results/FE_table.tex"
# Print LaTeX tables to files
print(FE_summary, file = file_path_FE)
library(Matrix)
library(lfe)
library(lmtest)
first_stage <- lm(unions ~ demo + CollectiveBargain_Coverage + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate, data = dataset)
summary(first_stage)
dataset$unions_fitted <- predict(first_stage, newdata = dataset)
# Perform the second stage of the IV regression
second_stage <- lm(Gini_Index ~ unions_fitted + CollectiveBargain_Coverage + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate + net_export, data = dataset)
# Display the summary of the second-stage regression
summary(second_stage)
library(xtable)
first_stage_summary <- summary(first_stage)
second_stage_summary <- summary(second_stage)
# Convert summaries to LaTeX format
first_stage_table <- xtable(first_stage_summary)
second_stage_table <- xtable(second_stage_summary)
file_path_first_stage <- "/Users/jacopobinati/Desktop/thesis/results/first_stage_table.tex"
file_path_second_stage <- "/Users/jacopobinati/Desktop/thesis/results/second_stage_table.tex"
# Print LaTeX tables to files
print(first_stage_table, file = file_path_first_stage)
print(second_stage_table, file = file_path_second_stage)
model4_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate, data = dataset)
model5_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export, data = dataset)
model6_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset)
# Estimate the models
model4 <- summary(model4_formula)
model5 <- summary(model5_formula)
model6 <- summary(model6_formula)
# Display the summaries
print(model4)
print(model5)
print(model6)
stargazer(model4_formula, model5_formula, model6_formula, type="text")
models_list <- list(model4_formula, model5_formula, model6_formula)
# Specify file path
file_path_models <- "/Users/jacopobinati/Desktop/thesis/results/models_table.tex"
# Generate LaTeX table
models_table <- stargazer(models_list, type = "text", title = "Two Ways Fixed Effect + IV Regression Models", header = FALSE)
cat(models_table, file = file_path_models)
library(prophet)
library(tidyverse)
library(urca)
#stationarity check for both variables
# Function to perform ADF test for stationarity
adf_test <- function(data, variable) {
adf_result <- ur.df(data[[variable]], type = "drift", lags = 4)
summary(adf_result)
}
# Perform ADF test for 'TradeUnions_Density'
adf_test_result_trade_unions <- adf_test(dataset, 'TradeUnions_Density')
# Perform ADF test for 'Gini_Index'
adf_test_result_gini <- adf_test(dataset, 'Gini_Index')
adf_test_result_trade_unions
adf_test_result_gini
model4_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate | demo, data = dataset)
model5_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export | demo, data = dataset)
model6_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution | demo, data = dataset)
# Estimate the models
model4 <- summary(model4_formula)
model5 <- summary(model5_formula)
model6 <- summary(model6_formula)
# Display the summaries
print(model4)
print(model5)
print(model6)
stargazer(model4_formula, model5_formula, model6_formula, type="text")
model4_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate, data = dataset)
model5_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export, data = dataset)
model6_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset)
# Estimate the models
model4 <- summary(model4_formula)
model5 <- summary(model5_formula)
model6 <- summary(model6_formula)
# Display the summaries
print(model4)
print(model5)
print(model6)
stargazer(model4_formula, model5_formula, model6_formula, type="text")
model4_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate, data = dataset)
model5_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export, data = dataset)
model6_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset)
# Estimate the models
model4 <- summary(model4_formula)
model5 <- summary(model5_formula)
model6 <- summary(model6_formula)
models_list <- list(model4_formula, model5_formula, model6_formula)
# Specify file path
file_path_models <- "/Users/jacopobinati/Desktop/thesis/results/models_table.tex"
# Generate LaTeX table
models_table <- stargazer(models_list, type = "text", title = "Two Ways Fixed Effect + IV Regression Models", header = FALSE)
cat(models_table, file = file_path_models)
library("modelsummary")
install.packages("modelsummary")
library(modelsummary)
m_list <- list(
TWFE = model4,
TWFEIV = model6
)
# Generate the summary table
msummary(m_list)
df <- df %>%
mutate(unions = (TradeUnions_Density) /(CollectiveBargain_Coverage))
library(xtable)
# Check for multicollinearity using the eigenvalue test
correlation_matrix <- cor(dataset[, c("demo", "unions", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")])
eigenvalues <- eigen(correlation_matrix)$values
print(eigenvalues)
# Check for multicollinearity using the VIF function
vif_values <- car::vif(lm(Gini_Index ~ demo + unions + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset))
independent_vars <- c("demo", "unions", "Inflation", "WageGrowth", "Gov_debt", "ln_labor", "WomenUnemployment_rate", "net_export", "net_FDI", "Tax_contribution")
vif_df <- data.frame(VIF = vif_values)
vif_df
independent_vars <- c("Democratic Governance", "Trade Unions", "Inflation", "Wage Growth", "Government Debt (%)", "Log of Labor participation", "Women Unemployment Rate", "Net Export", "Net FDI", "Tax Contribution")
# Create dataframe with eigenvalues and VIF values
eigen_vif_df <- data.frame(variables = independent_vars, Eigenvalue = eigenvalues, VIF = vif_values)
# Print the dataframe
print(eigen_vif_df)
# Define the file path
file_path <- "/Users/jacopobinati/Desktop/thesis/results/VIF_Eigenvalue.tex"
# Write the dataframe to a text file
write.table(eigen_vif_df, file = file_path, sep = "\t", quote = FALSE, row.names = FALSE)
variables <- dataset[, c("Gini_Index", "demo", "unions", "Inflation", "WageGrowth",
"Gov_debt", "lnminwage", "lnGDP",
"WomenUnemployment_rate",
"Female_Workers","Parttime_employment", "net_export", "net_FDI")]
# Calculating the correlation coefficients
correlation_matrix <- cor(variables)
# Plotting the heatmap
heatmap(correlation_matrix,
col = colorRampPalette(c("blue", "white", "red"))(100),
scale = "none",
main = "Correlation Heatmap")
library(stargazer)
library(plm)
library(AER)
library(readr)
df <- df %>%
mutate(
Country = as.factor(Country),
Year = as.factor(Year)
)
pdata <- pdata.frame(df, index = c("Country", "Year"))
model_formulas <- c(
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ TradeUnions_Density + unions + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else if (type == "FD") {
return(plm(formula, data = dataset, model = "fd"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", model_formulas)
fe_models <- create_models(pdata, "FE", model_formulas)
fd_models <- create_models(pdata, "FD", model_formulas)
# Summarize the models
stargazer(ols_models[c(4, 5, 6)], type = "text", title = "OLS Regression Models")
stargazer(fd_models[c(4, 5, 6)], type = "text", title = "First Differences Regression Models")
stargazer(fe_models[c(4, 5, 6)], type = "text", title = "Fixed Effects Regression Models")
FE_summary <- summary(fd_models[c(4, 5, 6)])
FE_summary <- xtable(FE_summary)
file_path_FE <- "/Users/jacopobinati/Desktop/thesis/results/FE_table.tex"
# Print LaTeX tables to files
print(FE_summary, file = file_path_FE)
library(Matrix)
library(lfe)
library(lmtest)
first_stage <- lm(unions ~ demo + CollectiveBargain_Coverage + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate, data = dataset)
summary(first_stage)
dataset$unions_fitted <- predict(first_stage, newdata = dataset)
# Perform the second stage of the IV regression
second_stage <- lm(Gini_Index ~ unions_fitted + CollectiveBargain_Coverage + Inflation + WageGrowth + Gov_debt + ln_labor + WomenUnemployment_rate + net_export, data = dataset)
# Display the summary of the second-stage regression
summary(second_stage)
first_stage_summary <- summary(first_stage)
second_stage_summary <- summary(second_stage)
# Convert summaries to LaTeX format
first_stage_table <- xtable(first_stage_summary)
second_stage_table <- xtable(second_stage_summary)
file_path_first_stage <- "/Users/jacopobinati/Desktop/thesis/results/first_stage_table.tex"
file_path_second_stage <- "/Users/jacopobinati/Desktop/thesis/results/second_stage_table.tex"
# Print LaTeX tables to files
print(first_stage_table, file = file_path_first_stage)
print(second_stage_table, file = file_path_second_stage)
model4_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate, data = dataset)
model5_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export, data = dataset)
model6_formula <- ivreg(Gini_Index ~ unions + Inflation + WageGrowth + lnminwage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution | TradeUnions_Density + demo + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution, data = dataset)
# Estimate the models
model4 <- summary(model4_formula)
model5 <- summary(model5_formula)
model6 <- summary(model6_formula)
models_list <- list(model4_formula, model5_formula, model6_formula)
# Specify file path
file_path_models <- "/Users/jacopobinati/Desktop/thesis/results/models_table.tex"
# Generate LaTeX table
models_table <- stargazer(models_list, type = "text", title = "Two Ways Fixed Effect + IV Regression Models", header = FALSE)
cat(models_table, file = file_path_models)
library(prophet)
library(tidyverse)
library(urca)
#stationarity check for both variables
# Function to perform ADF test for stationarity
adf_test <- function(data, variable) {
adf_result <- ur.df(data[[variable]], type = "drift", lags = 4)
summary(adf_result)
}
# Perform ADF test for 'TradeUnions_Density'
adf_test_result_trade_unions <- adf_test(dataset, 'TradeUnions_Density')
# Perform ADF test for 'Gini_Index'
adf_test_result_gini <- adf_test(dataset, 'Gini_Index')
adf_test_result_trade_unions
adf_test_result_gini
models_list <- list(model4_formula, model5_formula, model6_formula)
# Specify file path
file_path_models <- "/Users/jacopobinati/Desktop/thesis/results/models_table.tex"
# Generate LaTeX table
models_table <- stargazer(models_list, type = "text", title = "Two Ways Fixed Effect + IV Regression Models", header = FALSE)
cat(models_table, file = file_path_models)
df <- df %>%
mutate(unions = sqrt(TradeUnions_Density) * log(CollectiveBargain_Coverage))
View(df)
df <- df %>%
mutate(u1 = TradeUnions_Density/CollectiveBargain_Coverage)
df <- df %>%
mutate(u2 = TradeUnions_Density^2)
df <- df %>%
mutate(u3 = CollectiveBargain_Coverage/TradeUnions_Density)
f1 <- c(
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
f1 <- c(
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = df))
} else if (type == "FE") {
return(plm(formula, data = df, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
f1 <- c(
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
f1 <- c(
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
dataset <- dataset %>%
mutate(u1 = TradeUnions_Density/CollectiveBargain_Coverage)
dataset <- dataset %>%
mutate(u2 = TradeUnions_Density^2)
dataset <- dataset %>%
mutate(u3 = CollectiveBargain_Coverage/TradeUnions_Density)
f1 <- c(
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
fe_models <- create_models(pdata, "FE", f1)
# Summarize the models
stargazer(ols_models[c(1, 2, 3)], type = "text", title = "OLS Regression Models")
stargazer(fd_models[c(1, 2, 3)], type = "text", title = "First Differences Regression Models")
stargazer(fe_models[c(1, 2, 3)], type = "text", title = "Fixed Effects Regression Models")
f1 <- c(
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u1 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
fe_models <- create_models(pdata, "FE", f1)
# Summarize the models
stargazer(ols_models[c(1, 2, 3)], type = "text", title = "OLS Regression Models")
stargazer(fe_models[c(1, 2, 3)], type = "text", title = "Fixed Effects Regression Models")
f1 <- c(
"Gini_Index ~ u2 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u2 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u2 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
fe_models <- create_models(pdata, "FE", f1)
# Summarize the models
stargazer(ols_models[c(1, 2, 3)], type = "text", title = "OLS Regression Models")
stargazer(fe_models[c(1, 2, 3)], type = "text", title = "Fixed Effects Regression Models")
f1 <- c(
"Gini_Index ~ u3 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate",
"Gini_Index ~ u3 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export",
"Gini_Index ~ u3 + Inflation + WageGrowth + lnminwage + CollectiveBargain_Coverage + lnGDP + Gov_debt + ln_labor + Female_Workers + Parttime_employment + WomenUnemployment_rate + net_export + net_FDI + Tax_contribution"
)
create_models <- function(data, type, formulas) {
lapply(formulas, function(formula) {
formula <- as.formula(formula)
if (type == "OLS") {
return(lm(formula, data = dataset))
} else if (type == "FE") {
return(plm(formula, data = dataset, model = "within"))
} else {
stop("Unknown model type")
}
})
}
# Create OLS, FE, and FD models
ols_models <- create_models(df, "OLS", f1)
fe_models <- create_models(pdata, "FE", f1)
# Summarize the models
stargazer(ols_models[c(1, 2, 3)], type = "text", title = "OLS Regression Models")
stargazer(fe_models[c(1, 2, 3)], type = "text", title = "Fixed Effects Regression Models")
