'Annual Inflation', 'Real Wage Growth',
'Annual Inflation', 'Labor tax and contributions',
'Labor tax and contributions', 'GDP',
'Labor tax and contributions', 'Labor force',
'Part time employment', 'Labor force',
'Labour force participation rate', 'Labor force',
'Unemployment rate', 'Labor force',
'Labor force', 'Real Wage Growth',
'Labor force', 'Annual Inflation',
'Labor force', 'Collective Bargain Coverage',
'Labor force', 'GDP',
'GDP', 'Real Wage Growth',
'Exports', 'GDP',
'Foreign direct investment, inflows', 'GDP',
'Foreign direct investment, outflows', 'GDP',
'Importss', 'GDP'),
byrow = TRUE, ncol = 2)
G <- graph_from_edgelist(edges, directed = TRUE)
V(G)$category <- nodes_with_categories$category[match(V(G)$name, nodes_with_categories$name)]
plot(G, seed=42, vertex.size=25, vertex.label=V(G)$name, vertex.color="lightblue",
main="Causal Map: Labour Unions and Income Inequality",
edge.arrow.size=.7, vertex.label.cex=0.5, vertex.label.family="Times",
layout=layout_with_fr(G, area=vcount(G)^3*2, repulserad=vcount(G)^3*2))
nodes_with_categories <- data.frame(
name = c('Collective Bargain Coverage', 'Trade Unions Density', 'Gini Index',
'Real Wage Growth', 'Annual Inflation',
'Exports',
'Foreign direct investment, inflows',
'Foreign direct investment, outflows',
'Imports',
'Current health expenditure',
'Central government debt',
'GDP',
'Labour force participation rate',
'Unemployment rate', 'Labor force, total',
'Labor tax and contributions',
'Part time employment, total', 'Monthly Minimum Wage'),
category = c(rep('Collective Bargaining', 2), 'Income Inequality', rep('Economic', 11),
rep('Labor Market', 4))
)
edges <- matrix(c('Trade Unions Density', 'Gini Index',
'Collective Bargain Coverage', 'Trade Unions Density',
'Real Wage Growth', 'Trade Unions Density',
'Annual Inflation', 'Real Wage Growth',
'Annual Inflation', 'Labor tax and contributions',
'Labor tax and contributions', 'GDP',
'Labor tax and contributions', 'Labor force',
'Part time employment', 'Labor force',
'Labour force participation rate', 'Labor force',
'Unemployment rate', 'Labor force',
'Labor force', 'Real Wage Growth',
'Labor force', 'Annual Inflation',
'Labor force', 'Collective Bargain Coverage',
'Labor force', 'GDP',
'GDP', 'Real Wage Growth',
'Exports', 'GDP',
'Foreign direct investment, inflows', 'GDP',
'Foreign direct investment, outflows', 'GDP',
'Importss', 'GDP'),
byrow = TRUE, ncol = 2)
G <- graph_from_edgelist(edges, directed = TRUE)
V(G)$category <- nodes_with_categories$category[match(V(G)$name, nodes_with_categories$name)]
plot(G, seed=42, vertex.size=25, vertex.label=V(G)$name, vertex.color="lightblue",
main="Causal Map: Labour Unions and Income Inequality",
edge.arrow.size=.7, vertex.label.cex=0.5, vertex.label.family="Times",
layout=layout_with_fr(G, area=vcount(G)^3*2, repulserad=vcount(G)^6*2))
nodes_with_categories <- data.frame(
name = c('Collective Bargain Coverage', 'Trade Unions Density', 'Gini Index',
'Real Wage Growth', 'Annual Inflation',
'Exports',
'Foreign direct investment, inflows',
'Foreign direct investment, outflows',
'Imports',
'Current health expenditure',
'Central government debt',
'GDP',
'Labour force participation rate',
'Unemployment rate', 'Labor force, total',
'Labor tax and contributions',
'Part time employment, total', 'Monthly Minimum Wage'),
category = c(rep('Collective Bargaining', 2), 'Income Inequality', rep('Economic', 11),
rep('Labor Market', 4))
)
edges <- matrix(c('Trade Unions Density', 'Gini Index',
'Collective Bargain Coverage', 'Trade Unions Density',
'Real Wage Growth', 'Trade Unions Density',
'Annual Inflation', 'Real Wage Growth',
'Annual Inflation', 'Labor tax and contributions',
'Labor tax and contributions', 'GDP',
'Labor tax and contributions', 'Labor force',
'Part time employment', 'Labor force',
'Labour force participation rate', 'Labor force',
'Unemployment rate', 'Labor force',
'Labor force', 'Real Wage Growth',
'Labor force', 'Annual Inflation',
'Labor force', 'Collective Bargain Coverage',
'Labor force', 'GDP',
'GDP', 'Real Wage Growth',
'Exports', 'GDP',
'Foreign direct investment, inflows', 'GDP',
'Foreign direct investment, outflows', 'GDP',
'Importss', 'GDP'),
byrow = TRUE, ncol = 2)
G <- graph_from_edgelist(edges, directed = TRUE)
V(G)$category <- nodes_with_categories$category[match(V(G)$name, nodes_with_categories$name)]
plot(G, seed=42, vertex.size=25, vertex.label=V(G)$name, vertex.color="lightblue",
main="Causal Map: Labour Unions and Income Inequality",
edge.arrow.size=.7, vertex.label.cex=0.5, vertex.label.family="Times",
layout=layout_with_fr(G, area=vcount(G)^3*2, repulserad=vcount(G)^6))
nodes_with_categories <- data.frame(
name = c('Collective Bargain Coverage', 'Trade Unions Density', 'Gini Index',
'Real Wage Growth', 'Annual Inflation',
'Exports',
'Foreign direct investment, inflows',
'Foreign direct investment, outflows',
'Imports',
'Current health expenditure',
'Central government debt',
'GDP',
'Labour force participation rate',
'Unemployment rate', 'Labor force, total',
'Labor tax and contributions',
'Part time employment, total', 'Monthly Minimum Wage'),
category = c(rep('Collective Bargaining', 2), 'Income Inequality', rep('Economic', 11),
rep('Labor Market', 4))
)
edges <- matrix(c('Trade Unions Density', 'Gini Index',
'Collective Bargain Coverage', 'Trade Unions Density',
'Real Wage Growth', 'Trade Unions Density',
'Annual Inflation', 'Real Wage Growth',
'Annual Inflation', 'Labor tax and contributions',
'Labor tax and contributions', 'GDP',
'Labor tax and contributions', 'Labor force',
'Part time employment', 'Labor force',
'Labour force participation rate', 'Labor force',
'Unemployment rate', 'Labor force',
'Labor force', 'Real Wage Growth',
'Labor force', 'Annual Inflation',
'Labor force', 'Collective Bargain Coverage',
'Labor force', 'GDP',
'GDP', 'Real Wage Growth',
'Exports', 'GDP',
'Foreign direct investment, inflows', 'GDP',
'Foreign direct investment, outflows', 'GDP',
'Importss', 'GDP'),
byrow = TRUE, ncol = 2)
G <- graph_from_edgelist(edges, directed = TRUE)
V(G)$category <- nodes_with_categories$category[match(V(G)$name, nodes_with_categories$name)]
plot(G, seed=42, vertex.size=25, vertex.label=V(G)$name, vertex.color="lightblue",
main="Causal Map: Labour Unions and Income Inequality",
edge.arrow.size=.7, vertex.label.cex=0.5, vertex.label.family="Times",
layout=layout_with_fr(G, area=vcount(G)^6, repulserad=vcount(G)^6))
first_stage_summary <- summary(first_stage)
second_stage_summary <- summary(second_stage)
# Convert summaries to LaTeX format
first_stage_table <- xtable(first_stage_summary)
library(xtable)
first_stage_summary <- summary(first_stage)
second_stage_summary <- summary(second_stage)
# Convert summaries to LaTeX format
first_stage_table <- xtable(first_stage_summary)
second_stage_table <- xtable(second_stage_summary)
# Print LaTeX tables
print(first_stage_table, file = "first_stage_table.tex")
print(second_stage_table, file = "second_stage_table.tex")
library(xtable)
first_stage_summary <- summary(first_stage)
second_stage_summary <- summary(second_stage)
# Convert summaries to LaTeX format
first_stage_table <- xtable(first_stage_summary)
second_stage_table <- xtable(second_stage_summary)
file_path_first_stage <- "/Users/jacopobinati/Desktop/thesis/results/first_stage_table.tex"
file_path_second_stage <- "/Users/jacopobinati/Desktop/thesis/results/second_stage_table.tex"
# Print LaTeX tables to files
print(first_stage_table, file = file_path_first_stage)
print(second_stage_table, file = file_path_second_stage)
models_list <- list(model4_formula, model5_formula, model6_formula)
# Specify file path
file_path_models <- "/Users/jacopobinati/Desktop/thesis/results/models_table.tex"
# Generate LaTeX table
models_table <- stargazer(models_list, type = "text", title = "2WFE + IV Regression Models", header = FALSE)
# Write LaTeX table to file
cat(models_table, file = file_path_models)
library(readxl)
library(readr)
library(tidyverse)
library(dplyr)
d1 <- read.excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted net national income per capita (current US$) - European Union.xls')
d1 <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted net national income per capita (current US$) - European Union.xls')
d1 <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted net national income per capita (current US$) - European Union.xls')
d1_pd <- pdata.frame(d1, index = c('Country Name'))
adj_national_income <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted_Net_National_Income_Per_Capita_Panel_Data.xlsx')
adj_national_income <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted_Net_National_Income_Per_Capita_Panel_Data.xlsx')
#drop columns Country Code, Indicator Name, Indicator Code
adj_national_income <- adj_national_income %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
eu_net_migration <- read.csv('/Users/jacopobinati/Desktop/Some New Data/EU_Net_Migration_Panel_Data.xlsx')
eu_net_migration <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_Net_Migration_Panel_Data.xlsx')
GDP_growth <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GDP_Growth_Panel_Data.xlsx')
GNI_current <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GNI_Panel_Data.xlsx')
GNI_percapita_Atlas <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GNI_Per_Capita_Panel_Data.xlsx')
Pol_stability <- read_excel('/Users/jacopobinati/Desktop/Some New Data/General_Political_Stability_Panel_Data.xlsx')
Population <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_Total_Population_Panel_Data.xlsx')
eu_net_migration <- eu_net_migration %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GDP_growth <- GDP_growth %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GNI_current <- GNI_current %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GNI_percapita_Atlas <- GNI_percapita_Atlas %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
Pol_stability <- Pol_stability %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
Population <- Population %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
merged_pd <- merge(adj_nation_income, eu_net_migration, GDP_growth, GNI_current,
GNI_percapita_Atlas, Pol_stability, Population,
by = c("Country Name", "Year"), all = TRUE)
merged_pd <- merge(adj_national_income, eu_net_migration, GDP_growth, GNI_current,
GNI_percapita_Atlas, Pol_stability, Population,
by = c("Country Name", "Year"), all = TRUE)
# Assuming 'adj_national_income', 'eu_net_migration', 'GDP_growth', 'GNI_current', 'GNI_percapita_Atlas', 'Pol_stability', and 'Population' are your DataFrames
# Rename 'Country Name' to 'Country' in adj_national_income DataFrame
adj_national_income <- adj_national_income %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in eu_net_migration DataFrame
eu_net_migration <- eu_net_migration %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GDP_growth DataFrame
GDP_growth <- GDP_growth %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GNI_current DataFrame
GNI_current <- GNI_current %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GNI_percapita_Atlas DataFrame
GNI_percapita_Atlas <- GNI_percapita_Atlas %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in Pol_stability DataFrame
Pol_stability <- Pol_stability %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in Population DataFrame
Population <- Population %>%
rename(Country = 'Country Name')
merged_pd <- merge(adj_national_income, eu_net_migration, GDP_growth, GNI_current,
GNI_percapita_Atlas, Pol_stability, Population,
by = c("Country", "Year"), all = TRUE)
# Merge all datasets based on 'Country' and 'Year'
merged_data <- merge(adj_national_income, eu_net_migration, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GDP_growth, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GNI_current, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GNI_percapita_Atlas, by = c('Country', 'Year'))
merged_data <- merge(merged_data, Pol_stability, by = c('Country', 'Year'))
merged_data <- merge(merged_data, Population, by = c('Country', 'Year'))
merged_data <- merged_pd
merged_pd <- merged_data
library(plm)
library(dplyr)
# in merged_pd keep if country == Serbia and those of the European Union
eu_countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus',
'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',
'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania',
'Slovakia', 'Slovenia', 'Spain', 'Sweden')
filtered_pd <- merged_pd %>%
filter((country == 'Serbia' | country %in% eu_countries) & year >= 1980)
# in merged_pd keep if country == Serbia and those of the European Union
eu_countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus',
'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',
'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania',
'Slovakia', 'Slovenia', 'Spain', 'Sweden')
filtered_pd <- merged_pd %>%
filter((Country == 'Serbia' | Country %in% eu_countries) & year >= 1980)
# in merged_pd keep if country == Serbia and those of the European Union
eu_countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus',
'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',
'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania',
'Slovakia', 'Slovenia', 'Spain', 'Sweden')
filtered_pd <- merged_pd %>%
filter((Country == 'Serbia' | Country %in% eu_countries) & Year >= 1980)
df <- filtered_pd
df.head()
print(df)
View(d1)
View(df)
# let's rename all the variable
df <- df %>%
rename(
# rename all the variables you need
Percentile Rank = 'political_stability',
# let's rename all the variable
df <- df %>%
rename(
# rename all the variables you need
"Percentile Rank" = 'political_stability',
)
# let's rename all the variable
df <- df %>%
rename(
# rename all the variables you need
Percentile Rank = 'political_stability'
# let's rename all the variable
df <- df %>%
rename(
# rename all the variables you need
Percentile_Rank = 'political_stability'
)
library(readxl)
library(readr)
library(tidyverse)
library(dplyr)
adj_national_income <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted_Net_National_Income_Per_Capita_Panel_Data.xlsx')
eu_net_migration <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_Net_Migration_Panel_Data.xlsx')
GDP_growth <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GDP_Growth_Panel_Data.xlsx')
GNI_current <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GNI_Panel_Data.xlsx')
GNI_percapita_Atlas <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GNI_Per_Capita_Panel_Data.xlsx')
Pol_stability <- read_excel('/Users/jacopobinati/Desktop/Some New Data/General_Political_Stability_Panel_Data.xlsx')
Population <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_Total_Population_Panel_Data.xlsx')
#drop columns Country Code, Indicator Name, Indicator Code
adj_national_income <- adj_national_income %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
eu_net_migration <- eu_net_migration %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GDP_growth <- GDP_growth %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GNI_current <- GNI_current %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GNI_percapita_Atlas <- GNI_percapita_Atlas %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
Pol_stability <- Pol_stability %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
Population <- Population %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
# Assuming 'adj_national_income', 'eu_net_migration', 'GDP_growth', 'GNI_current', 'GNI_percapita_Atlas', 'Pol_stability', and 'Population' are your DataFrames
# Rename 'Country Name' to 'Country' in adj_national_income DataFrame
adj_national_income <- adj_national_income %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in eu_net_migration DataFrame
eu_net_migration <- eu_net_migration %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GDP_growth DataFrame
GDP_growth <- GDP_growth %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GNI_current DataFrame
GNI_current <- GNI_current %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GNI_percapita_Atlas DataFrame
GNI_percapita_Atlas <- GNI_percapita_Atlas %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in Pol_stability DataFrame
Pol_stability <- Pol_stability %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in Population DataFrame
Population <- Population %>%
rename(Country = 'Country Name')
# Merge all datasets based on 'Country' and 'Year'
merged_data <- merge(adj_national_income, eu_net_migration, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GDP_growth, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GNI_current, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GNI_percapita_Atlas, by = c('Country', 'Year'))
merged_data <- merge(merged_data, Pol_stability, by = c('Country', 'Year'))
merged_data <- merge(merged_data, Population, by = c('Country', 'Year'))
merged_pd <- merged_data
library(plm)
library(dplyr)
# in merged_pd keep if country == Serbia and those of the European Union
eu_countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus',
'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',
'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania',
'Slovakia', 'Slovenia', 'Spain', 'Sweden')
filtered_pd <- merged_pd %>%
filter((Country == 'Serbia' | Country %in% eu_countries) & Year >= 1980)
df <- filtered_pd
print(df)
# let's rename all the variable
df <- df %>%
rename(
# rename all the variables you need
Percentile_Rank = 'political_stability'
)
# let's rename all the variable
df <- df %>%
rename(
political_stability = 'Percentile_Rank'
)
View(df)
# let's rename all the variable
df <- df %>%
rename(
political_stability = 'Percentile_Rank',
gdp = 'GDP_Growth_(%)',
gni = 'GNI_(current_US$)',
gnixcapita = 'GNI_per_capita_(current_US$)',
population = 'Total_Population'
)
library(readxl)
library(readr)
library(tidyverse)
library(dplyr)
adj_national_income <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted_Net_National_Income_Per_Capita_Panel_Data.xlsx')
eu_net_migration <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_Net_Migration_Panel_Data.xlsx')
GDP_growth <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GDP_Growth_Panel_Data.xlsx')
GNI_current <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GNI_Panel_Data.xlsx')
GNI_percapita_Atlas <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_GNI_Per_Capita_Panel_Data.xlsx')
Pol_stability <- read_excel('/Users/jacopobinati/Desktop/Some New Data/General_Political_Stability_Panel_Data.xlsx')
Population <- read_excel('/Users/jacopobinati/Desktop/Some New Data/EU_Total_Population_Panel_Data.xlsx')
#drop columns Country Code, Indicator Name, Indicator Code
adj_national_income <- adj_national_income %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
eu_net_migration <- eu_net_migration %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GDP_growth <- GDP_growth %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GNI_current <- GNI_current %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
GNI_percapita_Atlas <- GNI_percapita_Atlas %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
Pol_stability <- Pol_stability %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
Population <- Population %>%
select(-c('Country Code', 'Indicator Name', 'Indicator Code'))
# Assuming 'adj_national_income', 'eu_net_migration', 'GDP_growth', 'GNI_current', 'GNI_percapita_Atlas', 'Pol_stability', and 'Population' are your DataFrames
# Rename 'Country Name' to 'Country' in adj_national_income DataFrame
adj_national_income <- adj_national_income %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in eu_net_migration DataFrame
eu_net_migration <- eu_net_migration %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GDP_growth DataFrame
GDP_growth <- GDP_growth %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GNI_current DataFrame
GNI_current <- GNI_current %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in GNI_percapita_Atlas DataFrame
GNI_percapita_Atlas <- GNI_percapita_Atlas %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in Pol_stability DataFrame
Pol_stability <- Pol_stability %>%
rename(Country = 'Country Name')
# Rename 'Country Name' to 'Country' in Population DataFrame
Population <- Population %>%
rename(Country = 'Country Name')
# Merge all datasets based on 'Country' and 'Year'
merged_data <- merge(adj_national_income, eu_net_migration, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GDP_growth, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GNI_current, by = c('Country', 'Year'))
merged_data <- merge(merged_data, GNI_percapita_Atlas, by = c('Country', 'Year'))
merged_data <- merge(merged_data, Pol_stability, by = c('Country', 'Year'))
merged_data <- merge(merged_data, Population, by = c('Country', 'Year'))
merged_pd <- merged_data
library(plm)
library(dplyr)
# in merged_pd keep if country == Serbia and those of the European Union
eu_countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus',
'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',
'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania',
'Slovakia', 'Slovenia', 'Spain', 'Sweden')
filtered_pd <- merged_pd %>%
filter((Country == 'Serbia' | Country %in% eu_countries) & Year >= 1980)
df <- filtered_pd
print(df)
# let's rename all the variable
df <- df %>%
rename(
political_stability = 'Percentile_Rank',
gdp = 'GDP_Growth_(%)',
gni = 'GNI_(current_US$)',
gnixcapita = 'GNI_per_capita_(current_US$)',
population = 'Total_Population'
)
df.isnull
sapply(df, function(x) sum(is.na(x)) / length(x))
# in merged_pd keep if country == Serbia and those of the European Union
eu_countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus',
'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',
'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania',
'Slovakia', 'Slovenia', 'Spain', 'Sweden')
filtered_pd <- merged_pd %>%
filter((Country == 'Serbia' | Country %in% eu_countries) & Year >= 1990)
sapply(df, function(x) sum(is.na(x)) / length(x))
missing_values <- is.na(df)
print(missing_values)
str(df)
str(df)
df <- df %>%
mutate(Country = as.character(Country),
Year = as.integer(Year))
# Convert other variables to their appropriate data types
df$Income_x_capita <- as.numeric(df$Income_x_capita)
df$Net_Migration <- as.numeric(df$Net_Migration)
df$gdp <- as.numeric(df$gdp)
df$gni <- as.numeric(df$gni)
df$gnixcapita <- as.numeric(df$gnixcapita)
df$political_stability <- as.numeric(df$political_stability)
df$population <- as.numeric(df$population)
library(zoo)
df_filled <- zoo::na.locf(df, na.rm=FALSE)
na_count <- colSums(is.na(df_filled))
print(na_count)
View(df_filled)
library(readxl)
library(readr)
library(tidyverse)
library(dplyr)
adj_national_income <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted_Net_National_Income_Per_Capita_Panel_Data.xlsx')
adj_national_income <- read_excel('/Users/jacopobinati/Desktop/Some New Data/Adjusted_Net_National_Income_Per_Capita_Panel_Data.xlsx',
locale = locale(decimal_mark = ","))
